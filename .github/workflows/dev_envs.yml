name: "Dev env instructions"
on:
  pull_request:
  push:
    branches: [latest]
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/latest' }}
jobs:
  nix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-14]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@v13
    - name: Run the Magic Nix Cache
      uses: DeterminateSystems/magic-nix-cache-action@v7

    - run: nix run .# -- --version

    - run: nix develop --command bash -c "tox -e py310"

  pixi:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-14]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: set up pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.26.1
        cache: true
        frozen: true

    - name: run tests for 3.10
      shell: pixi run bash {0}
      run: tox -e py310

  mamba:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-14]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: cache conda
      uses: actions/cache@v4
      env:
        CACHE_NUMBER: 0
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}

    - name: setup conda
      uses: conda-incubator/setup-miniconda@a4260408e20b96e80095f42ff7f1a15b27dd94ca
      with:
        python-version: "3.10"
        miniforge-version: latest
        environment-file: dev.yml
        activate-environment: sourmash_dev
        auto-activate-base: false

    - name: run tests for 3.10
      shell: bash -l {0}
      run: tox -e py310
